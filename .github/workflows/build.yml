name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for webapp
      id: meta-webapp
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-webapp
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha

    - name: Extract metadata (tags, labels) for database
      id: meta-db
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-db
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha

    - name: Build WASM Application
      run: |
        cd web
        GOOS=js GOARCH=wasm go build -o public/app.wasm -buildvcs=false .

    - name: Build Go Binary for Linux
      run: |
        cd web
        CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o webapp ./main.go
        mv webapp ../webapp

    - name: Build and push webapp Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.webapp
        push: true
        tags: ${{ steps.meta-webapp.outputs.tags }}
        labels: ${{ steps.meta-webapp.outputs.labels }}

    - name: Build and push database Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.db
        push: true
        tags: ${{ steps.meta-db.outputs.tags }}
        labels: ${{ steps.meta-db.outputs.labels }}